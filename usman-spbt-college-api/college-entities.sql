-----------------------------------------
---College Tables-------------------------
-----------------------------------------
1. Students

DROP TABLE students;

CREATE TABLE students (
    student_id VARCHAR(10) PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    dob DATE NOT NULL,
    gender VARCHAR(10),
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(20) UNIQUE,
    admission_date DATE DEFAULT CURRENT_DATE,
    isactive bool DEFAULT true NULL,
	createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    createdBy VARCHAR(20),
    updatedAt TIMESTAMP,
    updatedBy VARCHAR(20)
);

2. Student Address

DROP TABLE student_address;

CREATE TABLE student_address (
    address_id BIGSERIAL PRIMARY KEY,
    student_id VARCHAR(10) NOT NULL REFERENCES students(student_id) ON DELETE CASCADE,
    address_line1 VARCHAR(255) NOT NULL,
    address_line2 VARCHAR(255),
    city VARCHAR(50),
    state VARCHAR(50),
    postal_code VARCHAR(6),
    country VARCHAR(50) DEFAULT 'India',
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    createdBy VARCHAR(20),
    updatedAt TIMESTAMP,
    updatedBy VARCHAR(20)
);

3. Courses

drop TABLE courses;

CREATE TABLE courses (
    course_id BIGSERIAL PRIMARY KEY,
    course_name VARCHAR(100) NOT NULL,
    course_code VARCHAR(20) UNIQUE NOT NULL,
    duration_months INT NOT NULL CHECK (duration_months > 0),
	createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    createdBy VARCHAR(20),
    updatedAt TIMESTAMP,
    updatedBy VARCHAR(20)
);

4. Student Admissions (link Student & Course)

drop TABLE student_admissions;

CREATE TABLE student_admissions (
    admission_id VARCHAR(10) PRIMARY KEY,
    student_id VARCHAR(10) REFERENCES students(student_id),
    course_code VARCHAR(20) REFERENCES courses(course_code),
    admission_year INT NOT NULL,
    status VARCHAR(20) DEFAULT 'Active',  -- Active, Completed, Dropped
	createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    createdBy VARCHAR(20),
    updatedAt TIMESTAMP,
    updatedBy VARCHAR(20)
);

5. Fees & Installments

drop TABLE fee_structure;

CREATE TABLE fee_structure (
    fee_id BIGSERIAL PRIMARY KEY,
    course_code VARCHAR(20) REFERENCES courses(course_code),
    total_fee NUMERIC(10,2) NOT NULL,
	createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    createdBy VARCHAR(20),
    updatedAt TIMESTAMP,
    updatedBy VARCHAR(20)
);

6. Fee payment

drop TABLE fee_payments;

CREATE TABLE fee_payments (
    payment_id BIGSERIAL PRIMARY KEY,
    admission_id VARCHAR(10) REFERENCES student_admissions(admission_id),
    installment_no INT NOT NULL,
    amount_paid NUMERIC(10,2) NOT NULL,
    payment_date DATE DEFAULT CURRENT_DATE,
    payment_mode VARCHAR(20), -- Cash, Card, BankTransfer
	createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    createdBy VARCHAR(20),
    updatedAt TIMESTAMP,
    updatedBy VARCHAR(20)
);

7. Semesters

drop TABLE semesters;

CREATE TABLE semesters (
    semester_id BIGSERIAL PRIMARY KEY,
    course_code VARCHAR(20) REFERENCES courses(course_code),
    semester_no INT NOT NULL,
    start_date DATE,
    end_date DATE,
	createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    createdBy VARCHAR(20),
    updatedAt TIMESTAMP,
    updatedBy VARCHAR(20)
);

8. Examinations

drop TABLE examinations;

CREATE TABLE examinations (
    exam_id BIGSERIAL PRIMARY KEY,
    semester_id INT REFERENCES semesters(semester_id),
    exam_name VARCHAR(100) NOT NULL,
    exam_date DATE NOT NULL,
	createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    createdBy VARCHAR(20),
    updatedAt TIMESTAMP,
    updatedBy VARCHAR(20)
);

9. Subjects

drop TABLE subjects;

CREATE TABLE subjects (
    subject_id BIGSERIAL PRIMARY KEY,
    course_code VARCHAR(20) REFERENCES courses(course_code),
    subject_name VARCHAR(100) NOT NULL,
    subject_code VARCHAR(20) UNIQUE NOT NULL,
	createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    createdBy VARCHAR(20),
    updatedAt TIMESTAMP,
    updatedBy VARCHAR(20)
);

10. Exam Results

drop TABLE exam_results;

CREATE TABLE exam_results (
    result_id BIGSERIAL PRIMARY KEY,
    exam_id INT REFERENCES examinations(exam_id),
    student_id VARCHAR(10) REFERENCES students(student_id),
    subject_id INT REFERENCES subjects(subject_id),
    marks_obtained NUMERIC(5,2),
    grade VARCHAR(5),
	createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    createdBy VARCHAR(20),
    updatedAt TIMESTAMP,
    updatedBy VARCHAR(20)
);

11. Teachers

CREATE TABLE teachers (
	teacherid int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	firstname varchar(20) NOT NULL,
	lastname varchar(20) NULL,
	dateofbirth date NOT NULL,
	gender varchar(1) NOT NULL,
	hiredate date NOT NULL,
	address varchar(255) NULL,
	phonenumber varchar(15) NULL,
	email varchar(55) NULL,
	qualification varchar(50) NULL,
	experience int4 NULL,
	subjectexpert varchar(100) NULL,
	isactive bool DEFAULT true NULL,
	createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	createdBy VARCHAR(20),
	updatedAt TIMESTAMP,
	updatedBy VARCHAR(20)
);


12. Users

DROP TABLE users;

CREATE TABLE users (
    userid          BIGSERIAL PRIMARY KEY,            -- Auto-increment ID
    username        VARCHAR(50) NOT NULL UNIQUE,      -- Login name
    password        VARCHAR(255) NOT NULL,            -- Encrypted password (e.g., BCrypt hash)
    role            INT DEFAULT 1,       			  -- ADMIN, MANAGER, USER etc.
    status          INT DEFAULT 1,     				  -- ACTIVE, INACTIVE, SUSPENDED, DELETED
    lastloginat   	TIMESTAMP,                        -- Last successful login time
    loginattempts   INT DEFAULT 0,                    -- For lockout policies
    createdby       VARCHAR(20),                      -- Admin or system who created the user
    createdat       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedby       VARCHAR(20),
    updatedat       TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

13. Users_detail

DROP TABLE users_detail

CREATE TABLE users_detail (
    id				BIGSERIAL PRIMARY KEY,            -- Auto-increment ID
    userid          BIGSERIAL NOT NULL,
    email           VARCHAR(100) NOT NULL UNIQUE,
    mobile          VARCHAR(15)   NULL,
    address         VARCHAR(255)  NULL,
    city            VARCHAR(100)  NULL,
    country         VARCHAR(100)  NULL,
    createdby       VARCHAR(20),
    createdat       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedby       VARCHAR(20),
    updatedat       TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


14. Audit Log

drop table audit_log;

CREATE TABLE audit_log (
    auditId     BIGSERIAL PRIMARY KEY,
    orderId     BIGINT NOT NULL,
    action       VARCHAR(255),
    jsonData    TEXT,
    createdAt   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    createdBy   VARCHAR(100) NOT NULL
);

----



